version: 2

_defaults: &defaults
  working_directory: ~/repo
  environment:
    TERM: dumb
  docker:
    - image: s22s/rasterframes-circleci:9b7682ef

_setenv: &setenv
  name: set CloudRepo credentials
  command: |-
    [ -d $HOME/.sbt ] || mkdir $HOME/.sbt
    printf "realm=s22s.mycloudrepo.io\nhost=s22s.mycloudrepo.io\nuser=$CLOUDREPO_USER\npassword=$CLOUDREPO_PASSWORD\n" > $HOME/.sbt/.credentials

_delenv: &unsetenv
  name: delete CloudRepo credential
  command: rm -rf  $HOME/.sbt/.credentials || true

_restore_cache: &restore_cache
  keys:
    - v3-dependencies-{{ checksum "build.sbt" }}
    - v3-dependencies-

_save_cache: &save_cache
  key: v3-dependencies--{{ checksum "build.sbt" }}
  paths:
    - ~/.cache/coursier
    - ~/.ivy2/cache
    - ~/.sbt
    - ~/.local

jobs:
  test:
    <<: *defaults
    resource_class: large
    steps:
      - checkout
      - run: *setenv
      - restore_cache:
          <<: *restore_cache

      - run: ulimit -c unlimited -S
      - run: cat /dev/null | sbt -batch core/test datasource/test experimental/test pyrasterframes/test

      - run:
          command: |
            mkdir -p /tmp/core_dumps
            cp core.* *.hs /tmp/core_dumps 2> /dev/null || true
          when: on_fail

      - store_artifacts:
          path: /tmp/core_dumps

      - store_test_results:
          path: core/target/test-reports

      - store_test_results:
          path: datasource/target/test-reports

      - store_test_results:
          path: experimental/target/test-reports

      - run: *unsetenv
      - save_cache:
          <<: *save_cache

  docs:
    <<: *defaults
    resource_class: xlarge
    steps:
      - checkout
      - run: *setenv

      - restore_cache:
          <<: *restore_cache

      - run: ulimit -c unlimited -S
      - run: pip3 install --quiet --user -r pyrasterframes/src/main/python/requirements.txt
      - run:
          command: cat /dev/null | sbt makeSite
          no_output_timeout: 30m

      - run:
          command: |
            mkdir -p /tmp/core_dumps
            cp core.* *.hs /tmp/core_dumps 2> /dev/null || true
            mkdir -p /tmp/markdown
            cp /home/circleci/repo/pyrasterframes/target/python/docs/*.md /tmp/markdown 2> /dev/null || true
          when: on_fail

      - store_artifacts:
          path: /tmp/core_dumps

      - store_artifacts:
          path: /tmp/markdown

      - store_artifacts:
          path: docs/target/site
          destination: rf-site

      - run: *unsetenv

      - save_cache:
          <<: *save_cache

  it:
    <<: *defaults
    resource_class: xlarge
    steps:
      - checkout
      - run: *setenv

      - restore_cache:
          <<: *restore_cache

      - run: ulimit -c unlimited -S
      - run:
          command: cat /dev/null | sbt it:test
          no_output_timeout: 30m

      - run:
          command: |
            mkdir -p /tmp/core_dumps
            cp core.* *.hs /tmp/core_dumps 2> /dev/null || true
          when: on_fail

      - store_artifacts:
          path: /tmp/core_dumps

      - run: *unsetenv

      - save_cache:
          <<: *save_cache

  itWithoutGdal:
    working_directory: ~/repo
    environment:
      TERM: dumb
    docker:
      - image: circleci/openjdk:8-jdk
    resource_class: xlarge
    steps:
      - checkout
      - run: *setenv

      - restore_cache:
          <<: *restore_cache

      - run:
          command: cat /dev/null | sbt it:test
          no_output_timeout: 30m
      - run: *unsetenv

      - save_cache:
          <<: *save_cache

  staticAnalysis:
    <<: *defaults

    steps:
      - checkout
      - run: *setenv
      - restore_cache:
          <<: *restore_cache

      - run: cat /dev/null | sbt dependencyCheck
      - run: cat /dev/null | sbt --debug dumpLicenseReport

      - run: *unsetenv

      - save_cache:
          <<: *save_cache
      - store_artifacts:
          path: datasource/target/scala-2.11/dependency-check-report.html
          destination: dependency-check-report-datasource.html
      - store_artifacts:
          path: experimental/target/scala-2.11/dependency-check-report.html
          destination: dependency-check-report-experimental.html
      - store_artifacts:
          path: core/target/scala-2.11/dependency-check-report.html
          destination: dependency-check-report-core.html
      - store_artifacts:
          path: pyrasterframes/target/scala-2.11/dependency-check-report.html
          destination: dependency-check-report-pyrasterframes.html


workflows:
  version: 2
  all:
    jobs:
      - test
      - it:
          filters:
            branches:
              only:
                - /feature\/.*-its/
      - itWithoutGdal:
          filters:
            branches:
              only:
                - /feature\/.*-its/
      - docs:
          filters:
            branches:
              only:
                - /feature\/.*docs.*/
                - /fix\/.*docs.*/
                - /docs\/.*/

  nightly:
    triggers:
      - schedule:
          cron: "0 8 * * *"
          filters:
            branches:
              only:
                - develop
    jobs:
      - it
      - itWithoutGdal
      - docs
#      - staticAnalysis
